<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Test" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), BuildEFTools.cmd))\tools\EntityFramework.settings.targets"/>

    <PropertyGroup>
        <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
        <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
        <RuntimeIdentifier>win</RuntimeIdentifier>
        <BuildProperties>Platform=$(Platform)</BuildProperties>
        <VSTest>$(VSINSTALLDIR)\Common7\IDE\CommonExtensions\Microsoft\TestWindow\vstest.console.exe</VSTest>
        <BuildTargets>Build</BuildTargets>
        <SolutionDir Condition="$(SolutionDir) == '' Or $(SolutionDir) == '*Undefined*'">$(MSBuildThisFileDirectory)</SolutionDir>
        <SkipEnvSetup></SkipEnvSetup>
        <LogsDir>$(SolutionDir)logs\</LogsDir>
        <SkipStrongNamesXml>tools\EFToolsSkipStrongNames.xml</SkipStrongNamesXml>
    </PropertyGroup>

    <ItemGroup>
        <Projects Include="$(SolutionDir)src\EFTools\XmlCore\XmlCore.csproj" />
        <Projects Include="$(SolutionDir)src\EFTools\DesignXmlCore\DesignXmlCore.csproj" />
        <Projects Include="$(SolutionDir)src\EFTools\EntityDesignModel\EntityDesignModel.csproj" />
        <Projects Include="$(SolutionDir)src\EFTools\EntityDesign\EntityDesign.csproj" />
        <Projects Include="$(SolutionDir)src\EFTools\EntityDesignBootstrapPackage\EntityDesignBootstrapPackage.csproj" />
        <Projects Include="$(SolutionDir)src\EFTools\EntityDesignDatabaseGeneration\EntityDesignDatabaseGeneration.csproj" />
        <Projects Include="$(SolutionDir)src\EFTools\EntityDesignEntityDesigner\EntityDesigner.csproj" />
        <Projects Include="$(SolutionDir)src\EFTools\EntityDesignExtensibility\EntityDesignExtensibility.csproj" />
        <Projects Include="$(SolutionDir)src\EFTools\EntityDesignPackage\EntityDesignPackage.csproj" />
        <Projects Include="$(SolutionDir)src\EFTools\EntityDesignerVersioningFacade\EntityDesignerVersioningFacade.csproj" />
    </ItemGroup>
    
    <ItemGroup Condition="'$(BuildCoreOnly)' != 'true'">
        <Projects Include="$(SolutionDir)test\EFTools\InProcTests\InProcTests.csproj" />
        <Projects Include="$(SolutionDir)test\EFTools\FunctionalTests\FunctionalTests.csproj" />
        <Projects Include="$(SolutionDir)test\EFTools\TestInfrastructure\TestInfrastructure.csproj" />
        <Projects Include="$(SolutionDir)test\EFTools\UnitTests\UnitTests.csproj" />
    </ItemGroup>

    <ItemGroup>
        <TestHostProjects Include="$(SolutionDir)tools\VsIdeHostAdapter\Framework\VsIdeTestHostFramework.csproj" />
        <TestHostProjects Include="$(SolutionDir)tools\VsIdeHostAdapter\TargetAddIn\VsIdeTestHostAddin.csproj" />
        <TestHostProjects Include="$(SolutionDir)tools\VsIdeHostAdapter\Installer\Installer.wixproj" />
    </ItemGroup>

    <ItemGroup>
        <XunitAssembly Include="test\EFTools\UnitTests\bin\$(Configuration)\EFDesigner.UnitTests.dll" />
        <XunitAssembly Include="test\EFTools\FunctionalTests\bin\$(Configuration)\EFDesigner.FunctionalTests.dll" />
    </ItemGroup>

    <Import Project="$(SolutionDir)\tools\EFTools.common.tasks" />
    <Import Project="$(SolutionDir)\.nuget\nuget.targets" />

    <Target Name="Clean">
        <MSBuild Targets="Clean"
                 Projects="@(Projects)" />
        <MSBuild Targets="Clean"
                 Projects="$(SolutionDir)\src\EFTools\Setup\GenerateMsiInputs\GenerateMsiInputs.msbuild" />
    </Target>

    <Target Name="CreateDirectories">
        <MakeDir Directories="$(LogsDir)"/>
    </Target>

    <Target Name="RestorePackages" DependsOnTargets="CheckPrerequisites">
        <PropertyGroup>
            <RequireRestoreConsent>false</RequireRestoreConsent>
        </PropertyGroup>
        <Message Text="Restoring NuGet packages..." Importance="High" />
        <Exec Command="$(NuGetCommand) restore EFTools.sln"
              LogStandardErrorAsError="true" />
    </Target>

    <Target Name="BuildFrameworkPackages">
      <MSBuild Projects="$(RepositoryRoot)EF.msbuild" Targets="Package" Properties="Configuration=$(Configuration)" />
    </Target>

    <Target Name="BuildDesigner" DependsOnTargets="RestorePackages;CreateDirectories;CheckSkipStrongNames">
        <MSBuild Targets="$(BuildTargets)"
                   Projects="@(Projects)"
                   Properties="Configuration=$(Configuration);$(BuildProperties);BuildPackages=false" />
    </Target>

    <Target Name="DetermineVSInstallPath">
        <Error Condition="!Exists('$(MSBuildProgramFiles32)\Microsoft Visual Studio\Installer\vswhere.exe')"
                 Text="Error in DetermineVSInstallPath: $(MSBuildProgramFiles32)\Microsoft Visual Studio\Installer\vswhere.exe does not exist."
                 Importance="High" />

        <Exec Condition="'$(VSInstallationPath)' == ''"
              ConsoleToMSBuild="true"
              Command='"$(MSBuildProgramFiles32)\Microsoft Visual Studio\Installer\vswhere.exe" -prerelease -latest -property installationPath' >
            <Output TaskParameter="ConsoleOutput" PropertyName="VSInstallationPath" />
        </Exec>

        <Error Condition="'$(VSInstallationPath)' == ''"
               Text="Unable to determine VSInstallationPath." />

        <Message Text="Using VSInstallationPath = $(VSInstallationPath)" />
    </Target>

    <Target Name="Build" DependsOnTargets="BuildDesigner;BuildTestHost;BuildInstaller" />

    <Target Name="Rebuild">
        <MSBuild Projects="$(MSBuildProjectFile)" Properties="BuildTargets=Rebuild;Configuration=$(Configuration)" Targets="Clean;Build" />
    </Target>

    <Target Name="Test" DependsOnTargets="ReRunXUnitTests;ReRunInProcTests" />

    <UsingTask TaskName="Xunit.Runner.MSBuild.xunit"
               AssemblyFile="$(PkgXunit)\lib\net20\xunit.runner.msbuild.dll" />

    <Target Name="ReRunXUnitTests">
        <xunit Assemblies="@(XunitAssembly)" Xml="$(OutputPath)TestResults.xml" />
    </Target>

    <Target Name="ReRunInProcTests">
        <MakeDir Directories="$(SolutionDir)TestResults\InProcTests\"/>
        <Exec Command='"$(VSTest)" $(SolutionDir)test\EFTools\InProcTests\bin\$(Configuration)\EFDesigner.InProcTests.dll /Settings:$(SolutionDir)test\EFTools\InProcTests\EFDesignerInProcTests.testsettings /InIsolation /logger:trx'
              WorkingDirectory="$(SolutionDir)TestResults\InProcTests\"/>
    </Target>


    <Target Name="ReRunTests" DependsOnTargets="BuildDesigner;ReRunXUnitTests;ReRunInProcTests" />
</Project>