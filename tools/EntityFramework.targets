<!--
****************************************************************************************************
Project global post-settings and targets.
****************************************************************************************************-->
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <PropertyGroup>
    <RepositoryRoot Condition="'$(RepositoryRoot)' == ''">$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), build.cmd))\</RepositoryRoot>
    <BuildDependsOn Condition="'$(BuildingToolingProject)' == 'true'">ValidateVisualStudioVersion;$(BuildDependsOn)</BuildDependsOn>
    <BuildDependsOn Condition="'$(MSBuildProjectExtension)' == '.nuproj'">ValidateNuGetConfig;SetNuSpecProperties;GetNuGetContentFromProject;$(BuildDependsOn)</BuildDependsOn>
  </PropertyGroup>

  <PropertyGroup>
    <DefineConstants Condition="'$(InternalsInvisible)' == 'true'">$(DefineConstants);INTERNALS_INVISIBLE</DefineConstants>
    <DefineConstants Condition="'$(VisualStudioVersion)' == '17.0'">$(DefineConstants);VS17</DefineConstants>
    <DefineConstants
     Condition="'$(VisualStudioVersion)' == '17.0'">$(DefineConstants);VS12ORNEWER</DefineConstants>
  </PropertyGroup>

  <PropertyGroup Condition="'$(BuildingToolingProject)' == 'true'" >
    <VisualStudioVersion15>15.0</VisualStudioVersion15>
    <VsSDKDir>$(VSSDK150Install)</VsSDKDir>
    <VSPackageVersion>17.0.0-preview-1-30928-1112</VSPackageVersion>
    <AssemblySearchPaths>
      $(RepositoryRoot)packages\**;
      $(AssemblySearchPaths)
    </AssemblySearchPaths>
  </PropertyGroup>

  <PropertyGroup>
    <!--Force a rebuild if this file is changed -->
    <MSBuildAllProjects>$(MSBuildAllProjects);$(MSBuildThisFileFullPath)</MSBuildAllProjects>
  </PropertyGroup>

  <!-- Post-targets imports -->

  <Import Project="EFTools.common.tasks" Condition="'$(BuildingToolingProject)' == 'true'" />
  <Import Project="$(CustomAfterEntityFrameworkTargets)" Condition="Exists('$(CustomAfterEntityFrameworkTargets)')" Label="Post-targets Build Extensibility Point." />

  <!-- Post-imports defintions: Set (overwrite) computed properties after all dependent properties have been resolved -->

  <PropertyGroup>
    <AssemblyVersion>$(VersionMajor).$(VersionMinor).0.$(VersionRevision)</AssemblyVersion>
    <AssemblyVersion Condition="'$(BuildingRuntimeProject)' == 'true'">$(VersionMajor).$(RuntimeAssemblyVersionMinor).0.$(VersionRevision)</AssemblyVersion>
    <AssemblyFileVersion>$(VersionMajor).$(VersionMinor).$(VersionBuild).$(VersionRevision)</AssemblyFileVersion>
    <EF6NuGetPackageVersion>$(RuntimeVersionMajor).$(RuntimeVersionMinor).$(VersionRelease)</EF6NuGetPackageVersion>
    <EF6NuGetPackageVersion Condition="$(VersionRelease.Contains('-')) AND '$(AppendVersionBuild)' == 'true'">$(EF6NuGetPackageVersion)-$(RuntimeVersionBuild)</EF6NuGetPackageVersion>
    <NuGetPackageVersion>$(EF6NuGetPackageVersion)</NuGetPackageVersion>
  </PropertyGroup>

  <PropertyGroup Condition="'$(BuildingToolingProject)' == 'true'">
    <WixFullProductName_Dev15>Entity Framework $(RuntimeVersionMajor).$(RuntimeVersionMinor).$(VersionReleasePrefix) Tools $(VersionReleaseName) for Visual Studio 2022</WixFullProductName_Dev15>
    <WixProductDescription_Dev15>$(WixFullProductName_Dev15)</WixProductDescription_Dev15>
  </PropertyGroup>

  <!-- Target definitions -->

  <Target Name="ValidateVisualStudioVersion">
    <PropertyGroup>
      <VisualStudioVersionError Condition="'$(VisualStudioVersion)' == '' OR '$(VisualStudioVersion)' != '17.0'">true</VisualStudioVersionError>
    </PropertyGroup>
    <Error Condition="'$(VisualStudioVersionError)' == 'true'" Text="VisualStudioVersion property value is invalid or not supported: '$(VisualStudioVersion)'" />
  </Target>

  <Target Name="SetNuSpecProperties">
    <PropertyGroup>
      <NuSpecProperties>NuGetPackageVersion=$(NuGetPackageVersion);EF6NuGetPackageVersion=$(EF6NuGetPackageVersion)</NuSpecProperties>
      <NuSpecProperties>$(NuSpecProperties);ProjectUrlFwLinkID=$(ProjectUrlFwLinkID);LicenseUrlFwLinkID=$(LicenseUrlFwLinkID)</NuSpecProperties>
    </PropertyGroup>
  </Target>

  <Target Name="ValidateNuGetConfig">
    <Error Condition="'$(Configuration)' != '$(Configuration45)'" Text="NuGet projects can be built for Configuration45 only" />
  </Target>

  <!-- GetNuGetContentFromProject: Gets the Compile item collection (source files) from projects into the NuGetContent item. -->
  <ItemDefinitionGroup>
    <NuGetContentProject>
      <SourceRootFullPath />
      <Destination>src</Destination>
    </NuGetContentProject>
  </ItemDefinitionGroup>

  <Target Name="GetNuGetContentFromProject" Condition="'@(NuGetContentProject)' != ''">
    <MSBuild Projects="$(MSBuildThisFileFullPath)" Targets="GetNuGetContentFromProjectCore"
             Properties="NuGetContentProject=%(NuGetContentProject.FullPath);SourceRootFullPath=%(RootDir)%(Directory)\..\;Destination=%(Destination)" >
      <Output TaskParameter="TargetOutputs" ItemName="NuGetContent" />
    </MSBuild>
  </Target>

  <Target Name="GetNuGetContentFromProjectCore" Outputs="@(NuGetContent)">
    <MSBuild Projects="$(NuGetContentProject)" Targets="GetCompile" RebaseOutputs="true">
      <Output TaskParameter="TargetOutputs" ItemName="Compile" />
    </MSBuild>
    <ItemGroup>
      <NugetContent Include="%(Compile.FullPath)">
        <Destination>$([System.IO.Path]::Combine($(Destination), $([MSBuild]::MakeRelative($([System.IO.Path]::GetFullPath($(SourceRootFullPath))), %(Compile.RootDir)%(Directory)))))</Destination>
      </NugetContent>
    </ItemGroup>
  </Target>
</Project>

